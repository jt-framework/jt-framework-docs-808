const t=JSON.parse('{"key":"v-f60e7346","path":"/v1/jt-808/guide/customization/auth-validator-config.html","title":"AuthValidator","lang":"zh-CN","frontmatter":{"description":"注意 该组件 当且仅当 你使用了内置的 AuthMsgHandler 来处理 鉴权消息 时才有效。; 如果你覆盖了/未启用内置的 AuthMsgHandler，那么你也 不用 提供 AuthCodeValidator。因为此时的鉴权逻辑已经完全交由你自定的 AuthMsgHandler 来处理了。; 比较鸡肋的一个内置组件，不过用来 Quick-Sta...","head":[["meta",{"property":"og:url","content":"https://github.com/hylexus/jt-framework/jt-framework-docs-808/v1/jt-808/guide/customization/auth-validator-config.html"}],["meta",{"property":"og:site_name","content":"jt-framework-808"}],["meta",{"property":"og:title","content":"AuthValidator"}],["meta",{"property":"og:description","content":"注意 该组件 当且仅当 你使用了内置的 AuthMsgHandler 来处理 鉴权消息 时才有效。; 如果你覆盖了/未启用内置的 AuthMsgHandler，那么你也 不用 提供 AuthCodeValidator。因为此时的鉴权逻辑已经完全交由你自定的 AuthMsgHandler 来处理了。; 比较鸡肋的一个内置组件，不过用来 Quick-Sta..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-04T14:10:45.000Z"}],["meta",{"property":"article:author","content":"hylexus"}],["meta",{"property":"article:modified_time","content":"2023-10-04T14:10:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AuthValidator\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-04T14:10:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hylexus\\",\\"url\\":\\"https://github.com/hylexus\\"}]}"]]},"headers":[],"git":{"createdTime":1696428645000,"updatedTime":1696428645000,"contributors":[{"name":"hylexus","email":"hylexus@163.com","commits":1}]},"readingTime":{"minutes":0.63,"words":188},"filePathRelative":"v1/jt-808/guide/customization/auth-validator-config.md","localizedDate":"2023年10月4日","autoDesc":true,"excerpt":""}');export{t as data};

import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o,c as i,b as n,a as e,d as s}from"./app-cuoTE0Qt.js";const c={},p=e(`<h1 id="编译源码" tabindex="-1"><a class="header-anchor" href="#编译源码"><span>编译源码</span></a></h1><h2 id="请先读我" tabindex="-1"><a class="header-anchor" href="#请先读我"><span>请先读我</span></a></h2><div class="hint-container info"><p class="hint-container-title">提示</p><p>一般情况下，你无需编译源码。直接引 为 <code>spring-boot</code> 提供的 <code>starter</code> 即可：</p><ul><li><code>spring-boot-3.x</code> : 引入 <code>jt-808-server-spring-boot-starter</code></li><li><code>spring-boot-2.x</code> : 引入 <code>jt-808-server-spring-boot-starter-boot2</code></li></ul></div><p>如果你要体验最新版 或者 要基于源码二次开发，可以参考下文的说明来编译源码：</p><h2 id="要求" tabindex="-1"><a class="header-anchor" href="#要求"><span>要求</span></a></h2><h3 id="为什么编译源码一定要-jdk17" tabindex="-1"><a class="header-anchor" href="#为什么编译源码一定要-jdk17"><span>为什么编译源码一定要 JDK17？</span></a></h3><div class="hint-container tip"><p class="hint-container-title">为什么编译源码一定要 JDK17？</p><p>因为 <code>jt-808-server-spring-boot-starter</code> 模块是为 <code>spring-boot-3.x</code> 提供的，<code>spring-boot-3.x</code> 必须使用 <code>JDK17+</code>。</p><p>其他模块虽然也用了 <code>JDK17</code>，但是编译级别是 <code>JDK11</code>。</p></div><h3 id="jdk版本要求" tabindex="-1"><a class="header-anchor" href="#jdk版本要求"><span>JDK版本要求</span></a></h3><p>从 <code>2.1.0</code> 开始支持 <code>spring-boot-3.x</code>，所以编译源码的 <code>JDK</code> 版本必须在 <code>JDK-17</code> (包括)以上。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>虽然源码要求的 <code>JDK</code> 版本必须在 <code>17</code> 以上，但是实际上：</p><ul><li>只有 <code>jt-808-server-spring-boot-starter</code> 模块必须使用 <code>JDK-17</code>，编译后的 <code>.class</code> 文件版本为 <code>61</code> (<code>JDK-17</code>)</li><li>其余模块编译后的 <code>.class</code> 文件版本依然是 <code>55</code> (<code>JDK-11</code>)；也就是说使用 <code>JDK17</code> 编译输出了 <code>JDK11</code> 对应的 <code>.class</code></li></ul></div><p>各个模块的 <strong>JDK版本</strong> 见下面表格：</p><table><thead><tr><th>Module</th><th>JDK</th><th>CompileLevel</th><th>.class</th></tr></thead><tbody><tr><td>jt-808-server-spring-boot-starter</td><td>17</td><td><em><strong>JDK-17</strong></em></td><td>61 (JDK-17)</td></tr><tr><td>jt-808-server-spring-boot-starter-boot2</td><td>17</td><td>JDK-11</td><td>55 (JDK-11)</td></tr><tr><td>jt-808-server-spring-boot-autoconfigure</td><td>17</td><td>JDK-11</td><td>55 (JDK-11)</td></tr><tr><td>jt-808-server-support</td><td>17</td><td>JDK-11</td><td>55 (JDK-11)</td></tr><tr><td>jt-808-server-core</td><td>17</td><td>JDK-11</td><td>55 (JDK-11)</td></tr></tbody></table><p>在 <code>gradle.properties</code> 配置文件里有两个 <code>JDK</code> 版本的配置:</p><ul><li><code>maximumJavaVersion</code> 是 <code>jt-808-server-spring-boot-starter</code> 用到的 <strong>JDK版本</strong></li><li><code>defaultJavaVersion</code> 是其余模块用到的</li></ul><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># spring-boot-2.x</span>
<span class="token key attr-name">defaultJavaVersion</span><span class="token punctuation">=</span><span class="token value attr-value">11</span>
<span class="token comment"># spring-boot-3.x</span>
<span class="token key attr-name">maximumJavaVersion</span><span class="token punctuation">=</span><span class="token value attr-value">17</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li>如果没有特殊需求，不建议对 <code>defaultJavaVersion</code> 降级(改为比 <strong>11</strong> 更低的版本) <ul><li>因为当前源码的最低要求是 <code>JDK11</code></li><li>降级之后可能有一些 <code>Java</code> 语法不兼容</li></ul></li><li><code>maximumJavaVersion</code> 这个配置项必须 <code>&gt;= 17</code>, 因为这个是给 <code>spring-boot-3.x</code> 用的</li><li>但是你可以将 <code>defaultJavaVersion</code> 或 / 和 <code>maximumJavaVersion</code> 升级(改为高版本)</li></ul></div><h3 id="spring-boot版本要求" tabindex="-1"><a class="header-anchor" href="#spring-boot版本要求"><span>spring-boot版本要求</span></a></h3><p>在 <code>gradle.properties</code> 配置文件里有两个 <code>spring-boot</code> 版本的配置:</p><ul><li><code>maximumSpringBootBomVersion</code> 是 <code>jt-808-server-spring-boot-starter</code> 用到的 <code>spring-boot</code> 版本</li><li><code>defaultSpringBootBomVersion</code> 是其余模块用到的 <code>spring-boot</code> 版本</li></ul><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># spring-boot-2.x</span>
<span class="token key attr-name">defaultSpringBootBomVersion</span><span class="token punctuation">=</span><span class="token value attr-value">2.6.14</span>
<span class="token comment"># spring-boot-3.x</span>
<span class="token key attr-name">maximumSpringBootBomVersion</span><span class="token punctuation">=</span><span class="token value attr-value">3.0.2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>如果没有特殊需求，也没必要修改源码中的 <code>spring-boot</code> 版本。</p><ul><li><code>defaultSpringBootBomVersion</code> 可取值为 <code>[2.2.x, 2.6.x]</code></li><li><code>maximumSpringBootBomVersion</code> 可取值为 <code>[3.0.0, ...)</code></li></ul></div><h2 id="编译" tabindex="-1"><a class="header-anchor" href="#编译"><span>编译</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>不建议自己单独安装 <code>gradle</code>。你应该直接使用项目中指定版本的 <code>gradle-wrapper</code>。</p></div><h3 id="命令行编译" tabindex="-1"><a class="header-anchor" href="#命令行编译"><span>命令行编译</span></a></h3><p>编译命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./gradlew clean build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><details class="hint-container details"><summary>详情</summary><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>~ <span class="token function">ls</span>
CHANGELOG.md                            gradle.properties                       jt-808-server-support
README.md                               gradlew                                 jt-core
build-script                            gradlew.bat                             jt-spring
build.gradle                            jt-808-server-spring-boot-autoconfigure samples
docs                                    jt-808-server-spring-boot-starter       settings.gradle
gradle                                  jt-808-server-spring-boot-starter-boot2

<span class="token comment"># 使用 项目中自带的 gradlew 来编译</span>
~ ./gradlew clean build

<span class="token operator">&gt;</span> Configure project <span class="token builtin class-name">:</span>
the maven repo credentials <span class="token function">file</span> <span class="token operator">&lt;&lt;</span>repo-credentials.gradle<span class="token operator">&gt;&gt;</span> will be load from <span class="token builtin class-name">:</span> /xxx/xxx/.gradle/repo-credentials.gradle
<span class="token punctuation">[</span><span class="token punctuation">[</span> MavenRepo <span class="token punctuation">]</span><span class="token punctuation">]</span> --<span class="token operator">&gt;</span> <span class="token punctuation">(</span>aliyun<span class="token punctuation">)</span><span class="token punctuation">[</span>release<span class="token punctuation">]</span> <span class="token operator">&lt;</span>-- <span class="token punctuation">[</span>jt-808-server-spring-boot-autoconfigure<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span> MavenRepo <span class="token punctuation">]</span><span class="token punctuation">]</span> --<span class="token operator">&gt;</span> <span class="token punctuation">(</span>aliyun<span class="token punctuation">)</span><span class="token punctuation">[</span>release<span class="token punctuation">]</span> <span class="token operator">&lt;</span>-- <span class="token punctuation">[</span>jt-808-server-spring-boot-starter<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span> MavenRepo <span class="token punctuation">]</span><span class="token punctuation">]</span> --<span class="token operator">&gt;</span> <span class="token punctuation">(</span>aliyun<span class="token punctuation">)</span><span class="token punctuation">[</span>release<span class="token punctuation">]</span> <span class="token operator">&lt;</span>-- <span class="token punctuation">[</span>jt-808-server-spring-boot-starter-boot2<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span> MavenRepo <span class="token punctuation">]</span><span class="token punctuation">]</span> --<span class="token operator">&gt;</span> <span class="token punctuation">(</span>aliyun<span class="token punctuation">)</span><span class="token punctuation">[</span>release<span class="token punctuation">]</span> <span class="token operator">&lt;</span>-- <span class="token punctuation">[</span>jt-808-server-support<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span> MavenRepo <span class="token punctuation">]</span><span class="token punctuation">]</span> --<span class="token operator">&gt;</span> <span class="token punctuation">(</span>aliyun<span class="token punctuation">)</span><span class="token punctuation">[</span>release<span class="token punctuation">]</span> <span class="token operator">&lt;</span>-- <span class="token punctuation">[</span>jt-core<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span> MavenRepo <span class="token punctuation">]</span><span class="token punctuation">]</span> --<span class="token operator">&gt;</span> <span class="token punctuation">(</span>aliyun<span class="token punctuation">)</span><span class="token punctuation">[</span>release<span class="token punctuation">]</span> <span class="token operator">&lt;</span>-- <span class="token punctuation">[</span>jt-spring<span class="token punctuation">]</span>

BUILD SUCCESSFUL <span class="token keyword">in</span> 7s
<span class="token number">73</span> actionable tasks: <span class="token number">71</span> executed, <span class="token number">2</span> up-to-date
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="导入idea" tabindex="-1"><a class="header-anchor" href="#导入idea"><span>导入Idea</span></a></h3><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li>请先给 <strong>Idea</strong> 装好 <code>lombok</code> 插件</li><li>请确保 <code>jdk.version &gt;= 17</code></li></ul></div><ul><li>1). 项目 <strong>JDK版本</strong> 配置：</li></ul>`,30),l={class:""},r=["src"],d=n("ul",null,[n("li",null,[s("2). "),n("code",null,"Gradle"),s(),n("code",null,"JDK版本"),s(" 配置:")])],-1),u=n("p",null,[s("打开 "),n("code",null,"idea"),s(" 的 "),n("code",null,"gradle"),s(" 配置界面:")],-1),v={class:""},g=["src"],m=n("p",null,[s("修改 "),n("code",null,"gradle"),s(" 用到的 "),n("strong",null,"JDK版本"),s(" 为 "),n("strong",null,"JDK17+")],-1),k={class:""},b=["src"],h=e('<h3 id="导入eclipse" tabindex="-1"><a class="header-anchor" href="#导入eclipse"><span>导入Eclipse</span></a></h3><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li>请先给 <strong>Eclipse</strong> 装好 <code>lombok</code> 插件</li><li>请确保 <code>jdk.version &gt;= 17</code></li></ul></div><div class="hint-container caution"><p class="hint-container-title">第一次导入报错</p><ul><li>先执行 <code>./gradlew eclipse</code> 命令，为 <code>eclipse</code> 生成配置。</li><li>然后 <code>refresh</code> 所有模块</li></ul></div><p>导入后，效果如下：</p>',4),f={class:""},J=["src"];function x(a,D){return o(),i("div",null,[p,n("p",l,[n("img",{src:a.$withBase("/img/v2/quick-start/build-from-source/idea-project-structure.png")},null,8,r)]),d,u,n("p",v,[n("img",{src:a.$withBase("/img/v2/quick-start/build-from-source/gradle-jdk-step-1.png")},null,8,g)]),m,n("p",k,[n("img",{src:a.$withBase("/img/v2/quick-start/build-from-source/gradle-jdk-step-2.png")},null,8,b)]),h,n("p",f,[n("img",{src:a.$withBase("/img/v2/quick-start/build-from-source/eclipse-project-view.png")},null,8,J)])])}const K=t(c,[["render",x],["__file","building-from-source.html.vue"]]);export{K as default};

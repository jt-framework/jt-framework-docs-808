import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as d,c as e,a as o}from"./app-cuoTE0Qt.js";const a={},r=o('<h1 id="数据类型转换-传统方式" tabindex="-1"><a class="header-anchor" href="#数据类型转换-传统方式"><span>数据类型转换(传统方式)</span></a></h1><h2 id="byte" tabindex="-1"><a class="header-anchor" href="#byte"><span>BYTE</span></a></h2><h3 id="反序列化byte" tabindex="-1"><a class="header-anchor" href="#反序列化byte"><span>反序列化BYTE</span></a></h3><table><thead><tr><th>目标类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>byte, Byte</code></td><td><code>@RequestField(dataType = BYTE)</code></td><td>有溢出的风险</td></tr><tr><td><code>short, Short</code></td><td><code>@RequestField(dataType = BYTE)</code></td><td></td></tr><tr><td><code>int, Integer</code></td><td><code>@RequestField(dataType = BYTE)</code></td><td></td></tr><tr><td><code>long, Long</code></td><td><code>@RequestField(dataType = BYTE)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@RequestField(dataType = BYTE)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@RequestField(dataType = BYTE)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>BitOperator</code></td><td><code>@RequestField(dataType = BYTE)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h3 id="序列化byte" tabindex="-1"><a class="header-anchor" href="#序列化byte"><span>序列化BYTE</span></a></h3><table><thead><tr><th>源类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>byte, Byte</code></td><td><code>@ResponseField(dataType = BYTE)</code></td><td></td></tr><tr><td><code>short, Short</code></td><td><code>@ResponseField(dataType = BYTE)</code></td><td></td></tr><tr><td><code>int, Integer</code></td><td><code>@ResponseField(dataType = BYTE)</code></td><td></td></tr><tr><td><code>long, Long</code></td><td><code>@ResponseField(dataType = BYTE)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@ResponseField(dataType = BYTE)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@ResponseField(dataType = BYTE)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>BitOperator</code></td><td><code>@ResponseField(dataType = BYTE)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h2 id="bytes" tabindex="-1"><a class="header-anchor" href="#bytes"><span>BYTES</span></a></h2><h3 id="反序列化bytes" tabindex="-1"><a class="header-anchor" href="#反序列化bytes"><span>反序列化BYTES</span></a></h3><table><thead><tr><th>目标类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>byte[], Byte[]</code></td><td><code>@RequestField(dataType = BYTES, length = xxx)</code></td><td></td></tr><tr><td><code>ByteBuf</code></td><td><code>@RequestField(dataType = BYTES, length = xxx)</code></td><td></td></tr><tr><td><code>String</code></td><td><code>@RequestField(dataType = BYTES, length = xxx)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@RequestField(dataType = BYTES, length = xxx)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@RequestField(dataType = BYTES, length = xxx)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h3 id="序列化bytes" tabindex="-1"><a class="header-anchor" href="#序列化bytes"><span>序列化BYTES</span></a></h3><table><thead><tr><th>源类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>byte[], Byte[]</code></td><td><code>@ResponseField(dataType = BYTES)</code></td><td></td></tr><tr><td><code>ByteBuf</code></td><td><code>@ResponseField(dataType = BYTES)</code></td><td></td></tr><tr><td><code>String</code></td><td><code>@ResponseField(dataType = BYTES)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@ResponseField(dataType = BYTES)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@ResponseField(dataType = BYTES)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h2 id="word" tabindex="-1"><a class="header-anchor" href="#word"><span>WORD</span></a></h2><h3 id="反序列化word" tabindex="-1"><a class="header-anchor" href="#反序列化word"><span>反序列化WORD</span></a></h3><table><thead><tr><th>目标类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>short, Short</code></td><td><code>@RequestField(dataType = WORD)</code></td><td>有溢出的风险</td></tr><tr><td><code>int, Integer</code></td><td><code>@RequestField(dataType = WORD)</code></td><td></td></tr><tr><td><code>long, Long</code></td><td><code>@RequestField(dataType = WORD)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@RequestField(dataType = WORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@RequestField(dataType = WORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>BitOperator</code></td><td><code>@RequestField(dataType = WORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h3 id="序列化word" tabindex="-1"><a class="header-anchor" href="#序列化word"><span>序列化WORD</span></a></h3><table><thead><tr><th>源类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>short, Short</code></td><td><code>@ResponseField(dataType = WORD)</code></td><td></td></tr><tr><td><code>int, Integer</code></td><td><code>@ResponseField(dataType = WORD)</code></td><td></td></tr><tr><td><code>long, Long</code></td><td><code>@ResponseField(dataType = WORD)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@ResponseField(dataType = WORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@ResponseField(dataType = WORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>BitOperator</code></td><td><code>@ResponseField(dataType = WORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h2 id="dword" tabindex="-1"><a class="header-anchor" href="#dword"><span>DWORD</span></a></h2><h3 id="反序列化dword" tabindex="-1"><a class="header-anchor" href="#反序列化dword"><span>反序列化DWORD</span></a></h3><table><thead><tr><th>目标类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>int, Integer</code></td><td><code>@RequestField(dataType = DWORD)</code></td><td>有溢出的风险</td></tr><tr><td><code>long, Long</code></td><td><code>@RequestField(dataType = DWORD)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@RequestField(dataType = DWORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@RequestField(dataType = DWORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>BitOperator</code></td><td><code>@RequestField(dataType = DWORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h3 id="序列化dword" tabindex="-1"><a class="header-anchor" href="#序列化dword"><span>序列化DWORD</span></a></h3><table><thead><tr><th>源类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>int, Integer</code></td><td><code>@ResponseField(dataType = DWORD)</code></td><td></td></tr><tr><td><code>long, Long</code></td><td><code>@ResponseField(dataType = DWORD)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@ResponseField(dataType = DWORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@ResponseField(dataType = DWORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>BitOperator</code></td><td><code>@ResponseField(dataType = DWORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h2 id="bcd" tabindex="-1"><a class="header-anchor" href="#bcd"><span>BCD</span></a></h2><h3 id="反序列化bcd" tabindex="-1"><a class="header-anchor" href="#反序列化bcd"><span>反序列化BCD</span></a></h3><table><thead><tr><th>目标类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>String</code></td><td><code>@RequestField(dataType = BCD, length = xxx)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@RequestField(dataType = BCD, length = xxx)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@RequestField(dataType = BCD, length = xxx)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h3 id="序列号bcd" tabindex="-1"><a class="header-anchor" href="#序列号bcd"><span>序列号BCD</span></a></h3><table><thead><tr><th>源类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>String</code></td><td><code>@ResponseField(dataType = BCD)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@ResponseField(dataType = BCD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@ResponseField(dataType = BCD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h2 id="string" tabindex="-1"><a class="header-anchor" href="#string"><span>STRING</span></a></h2><h3 id="反序列化string" tabindex="-1"><a class="header-anchor" href="#反序列化string"><span>反序列化STRING</span></a></h3><table><thead><tr><th>目标类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>String</code></td><td><code>@RequestField(dataType = STRING, length = xxx)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@RequestField(dataType = STRING, length = xxx)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@RequestField(dataType = STRING, length = xxx)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h3 id="序列化string" tabindex="-1"><a class="header-anchor" href="#序列化string"><span>序列化STRING</span></a></h3><table><thead><tr><th>源类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>String</code></td><td><code>@ResponseField(dataType = STRING)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@ResponseField(dataType = STRING)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@ResponseField(dataType = STRING)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table>',31),c=[r];function n(s,h){return d(),e("div",null,c)}const y=t(a,[["render",n],["__file","data-type-mapping.html.vue"]]);export{y as default};

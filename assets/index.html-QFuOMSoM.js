import{_ as d}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as s,c as l,b as e,e as n,w as a,a as c,d as o}from"./app-cuoTE0Qt.js";const r={},u=c('<h1 id="注解驱动开发" tabindex="-1"><a class="header-anchor" href="#注解驱动开发"><span>注解驱动开发</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>从客户端接收消息时，字节数组到消息实体类的映射，内部已经 <code>提供并自动注册</code> 了一个叫 <code>ReflectionBasedRequestMsgBodyConverter</code> 的转换器来完成。</p><p>所以，对于 <code>常见的报文</code> 可以直接基于注解来完成自动映射，而没必要提供一个 <code>RequestMsgBodyConverter</code> 。</p></div><div class="hint-container caution"><p class="hint-container-title">注意：</p><p>主动下发消息给客户端时的编码问题，目前只提供了一个最基本的内测版的注解。并且可能在后续版本删除。</p><p>所以，本文档暂时不会介绍这部分内容。</p></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>本小节主要内容如下：</p></div>',4);function p(v,h){const t=i("RouterLink");return s(),l("div",null,[u,e("ul",null,[e("li",null,[n(t,{to:"/v1/jt-808/guide/annotation-based-dev/src/v1/jt-808/guide/annotation-based-dev/req-msg-mapping.html"},{default:a(()=>[o("请求消息映射")]),_:1})]),e("li",null,[n(t,{to:"/v1/jt-808/guide/annotation-based-dev/src/v1/jt-808/guide/annotation-based-dev/msg-handler-register.html"},{default:a(()=>[o("消息处理器注册")]),_:1})]),e("li",null,[n(t,{to:"/v1/jt-808/guide/annotation-based-dev/src/v1/jt-808/guide/annotation-based-dev/resp-msg-mapping.html"},{default:a(()=>[o("响应消息映射")]),_:1})]),e("li",null,[n(t,{to:"/v1/jt-808/guide/annotation-based-dev/src/v1/jt-808/guide/annotation-based-dev/msg-push.html"},{default:a(()=>[o("消息下发")]),_:1})]),e("li",null,[n(t,{to:"/v1/jt-808/guide/annotation-based-dev/src/v1/jt-808/guide/annotation-based-dev/exception-handler.html"},{default:a(()=>[o("异常处理")]),_:1})]),e("li",null,[n(t,{to:"/v1/jt-808/guide/annotation-based-dev/src/v1/jt-808/guide/annotation-based-dev/location-msg-parse-demo.html"},{default:a(()=>[o("位置上传报文解析示例")]),_:1})])])])}const _=d(r,[["render",p],["__file","index.html.vue"]]);export{_ as default};

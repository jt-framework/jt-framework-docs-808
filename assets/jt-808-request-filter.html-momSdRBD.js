import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,a as e}from"./app-cuoTE0Qt.js";const t={},p=e(`<h1 id="jt808requestfilter-v2-1-1" tabindex="-1"><a class="header-anchor" href="#jt808requestfilter-v2-1-1"><span>Jt808RequestFilter(v2.1.1)</span></a></h1><p>这个接口也是从 <code>org.springframework.web.server.WebFilter</code> 借鉴(抄袭)的。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>该功能默认不开启，要使用 <code>Jt808RequestFilter</code> 需要配置 <code>jt808.plugins.request-filter.enabled = true</code></p></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Jt808RequestFilter</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>注意<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
     * 该功能默认不开启，要使用 filter 需要配置 <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">jt808<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>request<span class="token operator">-</span>filter<span class="token punctuation">.</span>enabled <span class="token operator">=</span> <span class="token boolean">true</span></span></span><span class="token punctuation">}</span>
     *
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * 能执行到这里就意味着: 请求整体结构已经解析完毕(分包请求也已经自动合并)。
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">filter</span></span><span class="token punctuation">}</span> 的逻辑执行完成之后才会执行消息体的解析。
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * 多个 <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">filter</span></span><span class="token punctuation">}</span> 实例的执行顺序和 Spring 的 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Order</span></span> @Order<span class="token punctuation">}</span> 和 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">Ordered</span></span> Ordered<span class="token punctuation">}</span> 一致。
     *
     * <span class="token keyword">@param</span> <span class="token parameter">exchange</span> 当前请求上下文
     * <span class="token keyword">@param</span> <span class="token parameter">chain</span>    过滤器链
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Order</span></span>
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">Ordered</span></span>
     * <span class="token keyword">@since</span> 2.1.1
     */</span>
    <span class="token keyword">void</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">Jt808ServerExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">Jt808RequestFilterChain</span> chain<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),c=[p];function o(l,i){return s(),a("div",null,c)}const k=n(t,[["render",o],["__file","jt-808-request-filter.html.vue"]]);export{k as default};

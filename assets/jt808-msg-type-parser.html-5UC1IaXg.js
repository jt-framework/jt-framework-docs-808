const e=JSON.parse('{"key":"v-028f813c","path":"/v2/jt-808/guide/quick-start/jt808-msg-type-parser.html","title":"消息类型","lang":"zh-CN","frontmatter":{"icon":"type","description":"MsgType 各个厂商对 808协议 都是选择性的实现，同时还有自定义的消息类型。; 所以，并没有内置所有类型的消息，而是定义了一个 MsgType 接口以供用户自行扩展。; 建议实现接口的时候使用枚举; 点击查看 MsgType 接口定义 每个项目都应该提供一个自己的 MsgType 实现，参考下面的 MyMsgType 定义： Jt808MsgT...","head":[["meta",{"property":"og:url","content":"https://github.com/hylexus/jt-framework/jt-framework-docs-808/v2/jt-808/guide/quick-start/jt808-msg-type-parser.html"}],["meta",{"property":"og:site_name","content":"jt-framework-808"}],["meta",{"property":"og:title","content":"消息类型"}],["meta",{"property":"og:description","content":"MsgType 各个厂商对 808协议 都是选择性的实现，同时还有自定义的消息类型。; 所以，并没有内置所有类型的消息，而是定义了一个 MsgType 接口以供用户自行扩展。; 建议实现接口的时候使用枚举; 点击查看 MsgType 接口定义 每个项目都应该提供一个自己的 MsgType 实现，参考下面的 MyMsgType 定义： Jt808MsgT..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-04T14:10:45.000Z"}],["meta",{"property":"article:author","content":"hylexus"}],["meta",{"property":"article:modified_time","content":"2023-10-04T14:10:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"消息类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-04T14:10:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hylexus\\",\\"url\\":\\"https://github.com/hylexus\\"}]}"]]},"headers":[{"level":2,"title":"MsgType","slug":"msgtype","link":"#msgtype","children":[]},{"level":2,"title":"Jt808MsgTypeParser","slug":"jt808msgtypeparser","link":"#jt808msgtypeparser","children":[]}],"git":{"createdTime":1696428645000,"updatedTime":1696428645000,"contributors":[{"name":"hylexus","email":"hylexus@163.com","commits":1}]},"readingTime":{"minutes":1.38,"words":414},"filePathRelative":"v2/jt-808/guide/quick-start/jt808-msg-type-parser.md","localizedDate":"2023年10月4日","autoDesc":true,"excerpt":""}');export{e as data};

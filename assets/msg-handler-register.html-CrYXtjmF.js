import{_ as c}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as l,c as i,b as n,d as s,e as a,w as p,a as u}from"./app-cuoTE0Qt.js";const d={},r=n("h1",{id:"消息处理器注册",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#消息处理器注册"},[n("span",null,"消息处理器注册")])],-1),k={class:"hint-container tip"},m=n("p",{class:"hint-container-title"},"传送门",-1),v={href:"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-annotation",target:"_blank",rel:"noopener noreferrer"},g={start:"2"},h=u(`<h2 id="jt808requestmsghandler" tabindex="-1"><a class="header-anchor" href="#jt808requestmsghandler"><span>@Jt808RequestMsgHandler</span></a></h2><ul><li>该注解类似于 <code>SpringMVC</code> 的 <code>@Controller</code>。</li><li><code>@Jt808RequestMsgHandler</code> 只能标注于 <code>类</code> 上，表示该类中存在 <code>MsgHandler</code> 方法。</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Jt808RequestMsgHandler</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonHandler</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jt808requestmsghandlermapping" tabindex="-1"><a class="header-anchor" href="#jt808requestmsghandlermapping"><span>@Jt808RequestMsgHandlerMapping</span></a></h2><ul><li>该注解类似于 <code>SpringMVC</code> 的 <code>@RequestMapping</code>。</li><li><code>@Jt808RequestMsgHandlerMapping</code> 只能标注于 <code>方法</code> 上，表示被注解的方法是一个 <code>MsgHandler</code> 方法。</li><li>从逻辑上来理解，被其注解的方法相当于一个实现了 <code>MsgHandler</code> 接口的处理器类。</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Jt808RequestMsgHandler</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonHandler</span> <span class="token punctuation">{</span>
    <span class="token comment">// 处理MsgId为0x0200的消息</span>
    <span class="token annotation punctuation">@Jt808RequestMsgHandlerMapping</span><span class="token punctuation">(</span>msgType <span class="token operator">=</span> <span class="token number">0x0200</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">RespMsgBody</span> <span class="token function">processLocationMsg</span><span class="token punctuation">(</span>
            <span class="token class-name">Jt808Session</span> session<span class="token punctuation">,</span> <span class="token class-name">RequestMsgMetadata</span> metadata<span class="token punctuation">,</span>
            <span class="token class-name">RequestMsgHeader</span> header<span class="token punctuation">,</span> <span class="token class-name">LocationUploadMsgBody</span> msgBody<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">assert</span> header<span class="token punctuation">.</span><span class="token function">getMsgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span><span class="token constant">CLIENT_LOCATION_INFO_UPLOAD</span><span class="token punctuation">.</span><span class="token function">getMsgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> session<span class="token punctuation">.</span><span class="token function">getTerminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span><span class="token function">getTerminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> session<span class="token punctuation">.</span><span class="token function">getTerminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>metadata<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTerminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> metadata<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> header<span class="token punctuation">;</span>

        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;处理位置上报消息 terminalId = {}, msgBody = {}&quot;</span><span class="token punctuation">,</span> header<span class="token punctuation">.</span><span class="token function">getTerminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msgBody<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">CommonReplyMsgBody</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span><span class="token function">getFlowId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span><span class="token constant">CLIENT_LOCATION_INFO_UPLOAD</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参数自动注入" tabindex="-1"><a class="header-anchor" href="#参数自动注入"><span>参数自动注入</span></a></h2><p>类似于 <code>SpringMVC</code> 的处理器参数注入，用 <code>@Jt808RequestMsgHandlerMapping</code> 注解的方法支持参数自动注入。</p><p>目前支持自动注入的参数类型如下：</p><ul><li><code>RequestMsgBody</code></li><li><code>RequestMsgHeader</code></li><li><code>RequestMsgMetadata</code></li><li><code>Jt808Session</code></li></ul><p>底层由 <code>HandlerMethodArgumentResolver</code> 来完成注入。<br> 所有支持的参数解析器都委托给了 <code>DelegateHandlerMethodArgumentResolvers</code>。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DelegateHandlerMethodArgumentResolvers</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerMethodArgumentResolver</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addDefaultHandlerMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token class-name">DelegateHandlerMethodArgumentResolvers</span> resolvers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resolvers<span class="token punctuation">.</span><span class="token function">addResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RequestMsgBodyArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resolvers<span class="token punctuation">.</span><span class="token function">addResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RequestMsgHeaderArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resolvers<span class="token punctuation">.</span><span class="token function">addResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RequestMsgMetadataArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resolvers<span class="token punctuation">.</span><span class="token function">addResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SessionArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resolvers<span class="token punctuation">.</span><span class="token function">addResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ExceptionArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">DelegateHandlerMethodArgumentResolvers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">addDefaultHandlerMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="msghandler注入到spring容器" tabindex="-1"><a class="header-anchor" href="#msghandler注入到spring容器"><span>MsgHandler注入到Spring容器</span></a></h2><p>从 <code>1.0.4-RELEASE</code> 开始，支持将 <code>MsgHandler</code> 交给Spring来管理，以便于在 <code>MsgHandler</code> 中使用Spring容器的其他bean。</p><p>使用方法也很简单，给你的 <code>MsgHandler</code> 加一个 <code>@Component</code> 注解即可。</p>`,15),b={class:"hint-container tip"},M=n("p",{class:"hint-container-title"},"传送门",-1),f={href:"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-annotation",target:"_blank",rel:"noopener noreferrer"},_={start:"2"};function R(y,H){const e=o("ExternalLinkIcon"),t=o("RouterLink");return l(),i("div",null,[r,n("div",k,[m,n("ul",null,[n("li",null,[n("ol",null,[n("li",null,[s("本小节的示例代码可以在 "),n("a",v,[s("samples/jt-808-server-sample-annotation"),a(e)]),s(" 下找到对应代码。")])])]),n("li",null,[n("ol",g,[n("li",null,[a(t,{to:"/v1/jt-808/guide/annotation-based-dev/src/v1/jt-808/guide/customization/msg-handler-config.html"},{default:p(()=>[s("点击这里了解 MsgHandler 的作用")]),_:1}),s("。")])])])])]),h,n("div",b,[M,n("ul",null,[n("li",null,[n("ol",null,[n("li",null,[s("本小节的示例代码可以在 "),n("a",f,[s("samples/jt-808-server-sample-annotation"),a(e)]),s(" 下找到对应代码。")])])]),n("li",null,[n("ol",_,[n("li",null,[a(t,{to:"/v1/jt-808/guide/annotation-based-dev/src/v1/jt-808/guide/customization/msg-handler-config.html"},{default:p(()=>[s("点击这里了解 MsgHandler 的作用")]),_:1}),s("。")])])])])])])}const q=c(d,[["render",R],["__file","msg-handler-register.html.vue"]]);export{q as default};

import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as r,c as d,b as n,d as s,e as a,w as i,a as c}from"./app-cuoTE0Qt.js";const u={},h=n("h1",{id:"快速开始",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#快速开始"},[n("span",null,"快速开始")])],-1),g=n("p",null,"此处将展示一个 最少配置 的808协议消息处理服务的搭建。",-1),k={class:"hint-container tip"},v=n("p",{class:"hint-container-title"},"传送门",-1),m={href:"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-bare",target:"_blank",rel:"noopener noreferrer"},_=n("h2",{id:"创建工程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#创建工程"},[n("span",null,"创建工程")])],-1),b=n("p",null,[s("创建一个空的 "),n("code",null,"spring-boot"),s(" 工程。")],-1),f={class:"hint-container tip"},x=n("p",{class:"hint-container-title"},"传送门",-1),y={href:"https://start.spring.io",target:"_blank",rel:"noopener noreferrer"},j=c(`<h2 id="添加依赖" tabindex="-1"><a class="header-anchor" href="#添加依赖"><span>添加依赖</span></a></h2><p>引入为 <code>808协议</code> 提供的 <code>spring-boot-starter</code></p><ul><li>gradle</li></ul><div class="language-groovy line-numbers-mode" data-ext="groovy" data-title="groovy"><pre class="language-groovy"><code>dependencies <span class="token punctuation">{</span>
	<span class="token comment">// ...</span>
	implementation group<span class="token punctuation">:</span> <span class="token string">&#39;io.github.hylexus.jt&#39;</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">&#39;jt-808-server-spring-boot-stater&#39;</span><span class="token punctuation">,</span> version<span class="token punctuation">:</span> <span class="token interpolation-string"><span class="token string">&quot;1.0.12-RELEASE&quot;</span></span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>maven</li></ul><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.hylexus.jt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jt-808-server-spring-boot-stater<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.12-RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><ul><li>application.yml</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">jt808</span><span class="token punctuation">:</span>
  <span class="token key atrule">print-component-statistics</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">logging</span><span class="token punctuation">:</span>
  <span class="token key atrule">level</span><span class="token punctuation">:</span> info
  <span class="token key atrule">level.io.github.hylexus</span><span class="token punctuation">:</span> debug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>@EnableJt808ServerAutoConfig</code> 启用自动配置</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token comment">// 启用自动配置</span>
<span class="token annotation punctuation">@EnableJt808ServerAutoConfig</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Jt808ServerSampleBareApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Jt808ServerSampleBareApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h2><p>至此，对808消息的处理流程已经搭建完毕。启动 <code>spring-boot</code> 项目开始测试。</p>`,13),E={class:""},A=["src"],B=c('<p>可以从启动日志中的<code>组件统计信息</code>中看到内置了一个对 <code>0x0102 (终端鉴权)</code> 消息的处理器。处理逻辑位于 <code>io.github.hylexus.jt808.handler.impl.BuiltinAuthMsgHandler</code> 。</p><div class="hint-container tip"><p class="hint-container-title">配置提示</p><p><code>组件统计信息</code> 的开关由配置项 <code>jt808.print-component-statistics = true|false</code> 来控制</p></div><p>鉴权成功与否是由函数式接口 <code>io.github.hylexus.jt808.ext.AuthCodeValidator</code> 处理的。<br> 并且内置了一个 <code>永远返回true的仅仅用于调试</code> 的实现类 <code>BuiltinAuthCodeValidatorForDebugging</code> 。</p><h3 id="使用发包工具测试鉴权消息" tabindex="-1"><a class="header-anchor" href="#使用发包工具测试鉴权消息"><span>使用发包工具测试鉴权消息</span></a></h3>',4),S={class:"hint-container caution"},w=n("p",{class:"hint-container-title"},"注意：",-1),F=n("code",null,"十六进制格式",-1),C={class:"hint-container caution"},I=n("p",{class:"hint-container-title"},"注意：",-1),L=n("code",null,"十六进制格式",-1),Q={class:"hint-container caution"},V=n("p",{class:"hint-container-title"},"注意：",-1),q=n("code",null,"十六进制格式",-1),J=n("p",null,[s("用发包工具发送如下报文给服务器( "),n("code",null,"默认TCP端口:6808"),s(" )测试：")],-1),N=n("div",{class:"language-text line-numbers-mode","data-ext":"text","data-title":"text"},[n("pre",{class:"language-text"},[n("code",null,`7E0102000676890100562606E144454A544E506D7E
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),R={class:""},$=["src"],D=n("p",null,"此时可以从控制台看到，内置的鉴权消息处理器打印出的日志，解析出了鉴权码，并且已经回复客户端。",-1),T={class:""},z=["src"],H={class:"hint-container tip"},M=n("p",{class:"hint-container-title"},"传送门",-1),P={href:"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-bare",target:"_blank",rel:"noopener noreferrer"};function G(t,K){const e=l("ExternalLinkIcon"),o=l("RouterLink");return r(),d("div",null,[h,g,n("div",k,[v,n("p",null,[s("本小节的示例可以在 "),n("a",m,[s("samples/jt-808-server-sample-bare"),a(e)]),s(" 下找到对应代码。")])]),_,b,n("div",f,[x,n("p",null,[s("可以使用 "),n("a",y,[s("Spring Initializer"),a(e)]),s(" 快速初始化一个 Spring Boot 工程。")])]),j,n("p",E,[n("img",{src:t.$withBase("/img/print-component-statistics.png")},null,8,A)]),B,n("div",S,[w,n("p",null,[s("无论以什么发包工具发包，都请记得以 "),F,s(" 发送！可以参考 "),a(o,{to:"/v1/jt-808/guide/basic/src/v1/jt-808/guide/FAQjt-808/guide/FAQ/debug.html#%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7"},{default:i(()=>[s("推荐发包工具")]),_:1}),s(" 。")])]),n("div",C,[I,n("p",null,[s("无论以什么发包工具发包，都请记得以 "),L,s(" 发送！可以参考 "),a(o,{to:"/v1/jt-808/guide/basic/src/v1/jt-808/guide/FAQjt-808/guide/FAQ/debug.html#%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7"},{default:i(()=>[s("推荐发包工具")]),_:1}),s(" 。")])]),n("div",Q,[V,n("p",null,[s("无论以什么发包工具发包，都请记得以 "),q,s(" 发送！可以参考 "),a(o,{to:"/v1/jt-808/guide/basic/src/v1/jt-808/guide/FAQjt-808/guide/FAQ/debug.html#%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7"},{default:i(()=>[s("推荐发包工具")]),_:1}),s(" 。")])]),J,N,n("p",R,[n("img",{src:t.$withBase("/img/auth-msg-debug.png")},null,8,$)]),D,n("p",T,[n("img",{src:t.$withBase("/img/auth-msg-breakpoint.png"),alt:"auth-msg-breakpoint"},null,8,z)]),n("div",H,[M,n("p",null,[s("本小节的示例可以在 "),n("a",P,[s("samples/jt-808-server-sample-bare"),a(e)]),s(" 下找到对应代码。")])])])}const W=p(u,[["render",G],["__file","quick-start.html.vue"]]);export{W as default};

import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o,c,b as a,d as e,e as i,a as n}from"./app-cuoTE0Qt.js";const d={},p=n(`<h1 id="server" tabindex="-1"><a class="header-anchor" href="#server"><span>server</span></a></h1><div class="hint-container info"><p class="hint-container-title">提示</p><p>该章节介绍的是 <code>jt808.server.xxx</code> 相关的配置。</p></div><h2 id="配置项总览" tabindex="-1"><a class="header-anchor" href="#配置项总览"><span>配置项总览</span></a></h2><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">jt808</span><span class="token punctuation">:</span>
  <span class="token key atrule">server</span><span class="token punctuation">:</span>
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">6808</span>
    <span class="token key atrule">boss-thread-count</span><span class="token punctuation">:</span> <span class="token number">0</span>
    <span class="token key atrule">worker-thread-count</span><span class="token punctuation">:</span> <span class="token number">0</span>
    <span class="token key atrule">idle-state-handler</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">reader-idle-time</span><span class="token punctuation">:</span> 20m
      <span class="token key atrule">writer-idle-time</span><span class="token punctuation">:</span> 0s <span class="token comment"># disabled</span>
      <span class="token key atrule">all-idle-time</span><span class="token punctuation">:</span> 0s <span class="token comment"># disabled</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="port" tabindex="-1"><a class="header-anchor" href="#port"><span>port</span></a></h2><ul><li>类型：<code>int</code></li><li>默认值：<code>6808</code></li></ul><p><code>Netty</code> 服务器的TCP端口。</p><h2 id="boss-thread-count" tabindex="-1"><a class="header-anchor" href="#boss-thread-count"><span>boss-thread-count</span></a></h2><ul><li>类型：<code>int</code></li><li>默认值：<code>0</code></li></ul><p>默认值 <code>0</code> 表示交由 <code>Netty</code> 处理。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">this</span><span class="token punctuation">.</span>bossGroup<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">NioEventLoopGroup</span><span class="token punctuation">(</span>bossThreadCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="worker-thread-count" tabindex="-1"><a class="header-anchor" href="#worker-thread-count"><span>worker-thread-count</span></a></h2><ul><li>类型：<code>int</code></li><li>默认值：<code>0</code></li></ul><p>默认值 <code>0</code> 表示交由 <code>Netty</code> 处理。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">this</span><span class="token punctuation">.</span>workerGroup<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">NioEventLoopGroup</span><span class="token punctuation">(</span>workThreadCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="idle-state-handler" tabindex="-1"><a class="header-anchor" href="#idle-state-handler"><span>idle-state-handler</span></a></h2><p>该配置项对应 <code>io.netty.handler.timeout.IdleStateHandler</code> 的 三个属性：<code>readerIdleTime</code>、 <code>writerIdleTime</code> 、<code>allIdelTime</code>。</p><p>如果你的项目不需要 <code>IdleStateHandler</code> 的话，将 <code>jt808.server.idle-state-handler.enabled</code> 配置为 <code>false</code> 即可。</p>`,18),r={class:"hint-container caution"},u=a("p",{class:"hint-container-title"},"警告",-1),k=a("li",null,[e("在 2.0.3(不包括) 以下的版本中这三个配置项的默认值都是 "),a("code",null,"20m")],-1),m=a("code",null,"Jt808TerminalHeatBeatHandler",-1),v=a("code",null,"Bug",-1),h={href:"https://github.com/hylexus/jt-framework/issues/66",target:"_blank",rel:"noopener noreferrer"},b=n(`<p><strong>2.0.3</strong> 之后版本默认配置如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">jt808</span><span class="token punctuation">:</span>
  <span class="token key atrule">server</span><span class="token punctuation">:</span>
    <span class="token key atrule">idle-state-handler</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">reader-idle-time</span><span class="token punctuation">:</span> 20m <span class="token comment"># 20m内没有发送数据的客户端将被断开</span>
      <span class="token key atrule">writer-idle-time</span><span class="token punctuation">:</span> 0s <span class="token comment"># disabled</span>
      <span class="token key atrule">all-idle-time</span><span class="token punctuation">:</span> 0s <span class="token comment"># disabled</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function y(_,g){const s=l("ExternalLinkIcon");return o(),c("div",null,[p,a("div",r,[u,a("ul",null,[k,a("li",null,[e("同时其实现类 "),m,e(" 有 "),v,e("，详情见: "),a("a",h,[e("issues#66"),i(s)])])])]),b])}const w=t(d,[["render",y],["__file","server.html.vue"]]);export{w as default};

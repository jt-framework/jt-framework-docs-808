import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as p,c as i,b as n,d as s,e,a as c}from"./app-cuoTE0Qt.js";const l={},u=n("h1",{id:"session相关",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#session相关"},[n("span",null,"Session相关")])],-1),r={class:"hint-container tip"},d=n("p",{class:"hint-container-title"},"传送门",-1),k={href:"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-customized",target:"_blank",rel:"noopener noreferrer"},v=c(`<h2 id="jt808sessionmanager" tabindex="-1"><a class="header-anchor" href="#jt808sessionmanager"><span>Jt808SessionManager</span></a></h2><p>该组件用来管理每个终端的 <code>TCP</code> 连接。</p><p>要定制 <code>Jt808SessionManager</code> 只需自己声明一个 <code>Jt808SessionManager</code> 类型的Bean即可。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySessionManager</span> <span class="token keyword">implements</span> <span class="token class-name">Jt808SessionManager</span> <span class="token punctuation">{</span>
    <span class="token comment">// ......</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomizedDemoJt808Config</span> <span class="token keyword">extends</span> <span class="token class-name">Jt808ServerConfigurationSupport</span> <span class="token punctuation">{</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Jt808SessionManager</span> <span class="token function">supplyJt808SessionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">MySessionManager</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jt808sessionmanagereventlistener" tabindex="-1"><a class="header-anchor" href="#jt808sessionmanagereventlistener"><span>Jt808SessionManagerEventListener</span></a></h2><p>该组件可以监听 <code>Jt808Session</code> 的 <code>添加</code>、<code>移除</code>、<code>关闭</code> 事件。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyJt808SessionManagerEventListener</span> <span class="token keyword">implements</span> <span class="token class-name">Jt808SessionManagerEventListener</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSessionAdd</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Jt808Session</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>session <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[SessionAdd] terminalId = {}, sessionId = {}&quot;</span><span class="token punctuation">,</span> session<span class="token punctuation">.</span><span class="token function">getTerminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> session<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomizedDemoJt808Config</span> <span class="token keyword">extends</span> <span class="token class-name">Jt808ServerConfigurationSupport</span> <span class="token punctuation">{</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Jt808SessionManagerEventListener</span> <span class="token function">supplyJt808SessionManagerEventListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyJt808SessionManagerEventListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),m={class:"hint-container tip"},b=n("p",{class:"hint-container-title"},"传送门",-1),g={href:"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-customized",target:"_blank",rel:"noopener noreferrer"};function h(f,_){const a=o("ExternalLinkIcon");return p(),i("div",null,[u,n("div",r,[d,n("p",null,[s("本小节示例可以在 "),n("a",k,[s("samples/jt-808-server-sample-customized"),e(a)]),s(" 找到相关代码。")])]),v,n("div",m,[b,n("p",null,[s("本小节示例可以在 "),n("a",g,[s("samples/jt-808-server-sample-customized"),e(a)]),s(" 找到相关代码。")])])])}const w=t(l,[["render",h],["__file","session-config.html.vue"]]);export{w as default};
